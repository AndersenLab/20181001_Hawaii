strip.background = element_blank(),
panel.background = element_blank())
links <- cowplot::plot_grid(meanEXT_link, normn_link, nrow =2, labels = c("A", "C"), align = "vh")
pxgs <- cowplot::plot_grid(meanEXT_pxg, normnpxg, nrow = 2, labels = c("B", "D"), align = "vh")
Full <- cowplot::plot_grid(links, pxgs, ncol = 2, rel_widths = c(1,.25), align = "vh")
load(glue::glue("{wd}/20171026_crazy_assay/chrIV/chrIV_regressed.Rda"))
chrIV_regressed_edit <- chrIV_regressed %>%
dplyr::filter(strain != "ECA674")
meanE <- plot_genopheno(chrIV_regressed_edit, "docetaxel", "mean.EXT", "IV")
meanE
load("~/Dropbox/AndersenLab/LabFolders/Tim/2018HawaiiSampling/data/fulcrum/df.Rda")
library(DT)
dup_c_labels <- df %>%
dplyr::filter(duplicated_c_label == 1) %>%
dplyr::distinct(c_label)
dup_celegans <- df %>%
dplyr::filter(c_label %in% dup_c_labels$c_label)
total_celegans <- df %>%
dplyr::filter(confirmed_species_id == "C. elegans")
total_dup_c_elegans_c_labels <- df %>%
dplyr::filter(duplicated_c_label == 1 | confirmed_species_id == "C. elegans")
c_elegans_isolations <- df %>%
dplyr::filter(confirmed_species_id == "C. elegans") %>%
dplyr::select(c_label, s_label, confirmed_species_id)
dup_c_elegans_c_plates <- df %>%
dplyr::filter(c_label %in% c_elegans_isolations$c_label & c_label %in% dup_c_labels$c_label)
c2633 <- df %>%
dplyr::filter(c_label == "C-2633")
View(c2633)
View(df)
c2633 <- df %>%
dplyr::filter(c_label == "C-2633") %>%
dplyr::select(c_label, fulcrum_id_collection, collection_datetime, confirmed_species_id, s_label,
fulcrum_id_isolation, isolated_at)
View(c2633)
c2633 <- df %>%
dplyr::filter(c_label == "C-2633") %>%
dplyr::select(c_label, s_label, confirmed_species_id, fulcrum_id_collection, fulcrum_id_isolation,
collection_datetime, isolated_at)
c2633 <- df %>%
dplyr::filter(c_label == "C-2633") %>%
dplyr::select(c_label, s_label, confirmed_species_id, fulcrum_id_collection, fulcrum_id_isolation,
collection_datetime, isolated_at) %>%
dplyr::arrange(collection_datetime)
?datatable
View(c2633)
test <- DT::datatable(c2633)
View(c2633)
library(tidyverse)
library(cowplot)
library(DT)
try(setwd(dirname(rstudioapi::getActiveDocumentContext()$path)))
source("~/Dropbox/AndersenLab/LabFolders/Tim/2018HawaiiSampling/01-setup.R")
load("~/Dropbox/AndersenLab/LabFolders/Tim/2018HawaiiSampling/data/fulcrum/df.Rda")
DT::datatable(df)
dup_c_labels <- df %>%
dplyr::filter(duplicated_c_label == 1) %>%
dplyr::distinct(c_label)
dup_celegans <- df %>%
dplyr::filter(c_label %in% dup_c_labels$c_label)
total_celegans <- df %>%
dplyr::filter(confirmed_species_id == "C. elegans")
total_dup_c_elegans_c_labels <- df %>%
dplyr::filter(duplicated_c_label == 1 | confirmed_species_id == "C. elegans")
c_elegans_isolations <- df %>%
dplyr::filter(confirmed_species_id == "C. elegans") %>%
dplyr::select(c_label, s_label, confirmed_species_id)
dup_c_elegans_c_plates <- df %>%
dplyr::filter(c_label %in% c_elegans_isolations$c_label & c_label %in% dup_c_labels$c_label)
c2633 <- df %>%
dplyr::filter(c_label == "C-2633") %>%
dplyr::select(c_label, s_label, confirmed_species_id, fulcrum_id_collection, fulcrum_id_isolation,
collection_datetime, isolated_at) %>%
dplyr::arrange(collection_datetime)
DT::datatable(c2633)
View(dup_c_elegans_c_plates)
View(c_elegans_isolations)
View(dup_c_elegans_c_plates)
View(c_elegans_isolations)
length(distinct(dup_c_elegans_c_plates))
length(distinct(dup_c_elegans_c_plates$c_label))
length(distinct(dup_c_elegans_c_plates$c_label))
length(distinct(dup_c_elegans_c_plates$c_label))
length(distinct(dup_c_elegans_c_plates$c_label))
dup_c_elegans_c_plates <- df %>%
dplyr::filter(c_label %in% c_elegans_isolations$c_label & c_label %in% dup_c_labels$c_label)
test <- length(unique(dup_c_elegans_c_plates$c_label))
test
View(dup_celegans)
dup_c_labels <- df %>%
dplyr::filter(duplicated_c_label == 1) %>%
dplyr::distinct(c_label) %>%
dplyr::arrange((c_label))
View(c_elegans_isolations)
View(c_elegans_isolations)
View(dup_c_labels)
c1508 <- df %>%
dplyr::filter(c_label == "C-1508") %>%
dplyr::select(fulcrum_id_collection, fulcrum_id_isolation, c_label, s_label, confirmed_species_id,
collection_datetime, isolated_at) %>%
dplyr::arrange(collection_datetime)
View(c1508)
View(dup_c_elegans_c_plates)
View(c1508)
c1696 <- df %>%
dplyr::filter(c_label == "C-1696") %>%
dplyr::select(fulcrum_id_collection, fulcrum_id_isolation, c_label, s_label, confirmed_species_id,
collection_datetime, isolated_at) %>%
dplyr::arrange(collection_datetime)
DT::datatable(c1696)
View(c1508)
View(c1696)
glimpse(c1696)
unique(c1696$fulcrum_id_collection)
View(dup_c_elegans_c_plates)
dup_c_elegans_c_plates <- df %>%
dplyr::filter(c_label %in% c_elegans_isolations$c_label & c_label %in% dup_c_labels$c_label) %>%
dplyr::arrange(c_label)
View(dup_c_elegans_c_plates)
c3422 <- df %>%
dplyr::filter(c_label == "C-3422") %>%
dplyr::select(fulcrum_id_collection, fulcrum_id_isolation, c_label, s_label, confirmed_species_id,
collection_datetime, isolated_at) %>%
dplyr::arrange(collection_datetime)
DT::datatable(c3422)
View(c3422)
View(dup_c_elegans_c_plates)
c3434 <- df %>%
dplyr::filter(c_label == "C-3434") %>%
dplyr::select(fulcrum_id_collection, fulcrum_id_isolation, c_label, s_label, confirmed_species_id,
collection_datetime, isolated_at) %>%
dplyr::arrange(collection_datetime)
DT::datatable(c3434)
View(c3434)
c3442 <- df %>%
dplyr::filter(c_label == "C-3442") %>%
dplyr::select(fulcrum_id_collection, fulcrum_id_isolation, c_label, s_label, confirmed_species_id,
collection_datetime, isolated_at) %>%
dplyr::arrange(collection_datetime)
DT::datatable(c3442)
View(c3442)
View(total_celegans)
View(total_celegans)
View(total_celegans)
dup_celegans_map <- map_collection(df %>% dplyr::filter(confirmed_species_id == "C. elegans") %>%  dplyr::mutate(color = case_when(duplicated_c_label == "1" ~ "grey", duplicated_c_label == "0" ~ "red")) , "color")
dup_celegans_map
View(c_elegans_isolations)
View(dup_c_elegans_c_plates)
c3451 <- df %>%
dplyr::filter(c_label == "C-3451") %>%
dplyr::select(fulcrum_id_collection, fulcrum_id_isolation, c_label, s_label, confirmed_species_id,
collection_datetime, isolated_at) %>%
dplyr::arrange(collection_datetime)
DT::datatable(c3451)
View(c3451)
View(dup_c_elegans_c_plates)
c3463 <- df %>%
dplyr::filter(c_label == "C-3463") %>%
dplyr::select(fulcrum_id_collection, fulcrum_id_isolation, c_label, s_label, confirmed_species_id,
collection_datetime, isolated_at) %>%
dplyr::arrange(collection_datetime)
DT::datatable(c3463)
View(c3463)
View(c3451)
View(dup_c_elegans_c_plates)
View(map_collection)
View(map_collection)
gallery <- function(df) {
knitr::asis_output(paste0("<img class='img-thumbnail' src='", df$samle_photo_url, "' />"))
}
map_collection <- function(df, color_use) {
WIDTH <- 20
HEIGHT <- 20
anchor_diff = -20
popup_anchor_x = 0.001
icos <- iconList(
red = makeIcon(
iconUrl = paste0("https://storage.googleapis.com/andersenlab.org/img/red.svg"),
iconWidth = WIDTH, iconHeight = HEIGHT,
popupAnchorX = popup_anchor_x, popupAnchorY = anchor_diff,
iconAnchorX = WIDTH/2, iconAnchorY = HEIGHT
),
lred = makeIcon(
iconUrl = paste0("https://storage.googleapis.com/andersenlab.org/img/lred.svg"),
iconWidth = WIDTH, iconHeight = HEIGHT,
popupAnchorX = popup_anchor_x, popupAnchorY = anchor_diff,
iconAnchorX = WIDTH/2, iconAnchorY = HEIGHT
),
yellow = makeIcon(
iconUrl = paste0("https://storage.googleapis.com/andersenlab.org/img/yellow.svg"),
iconWidth = WIDTH, iconHeight = HEIGHT,
popupAnchorX = popup_anchor_x, popupAnchorY = anchor_diff,
iconAnchorX = WIDTH/2, iconAnchorY = HEIGHT
),
green = makeIcon(
iconUrl = paste0("https://storage.googleapis.com/andersenlab.org/img/green.svg"),
iconWidth = WIDTH, iconHeight = HEIGHT,
popupAnchorX = popup_anchor_x, popupAnchorY = anchor_diff,
iconAnchorX = WIDTH/2, iconAnchorY = HEIGHT
),
grey = makeIcon(
iconUrl = paste0("https://storage.googleapis.com/andersenlab.org/img/grey.svg"),
iconWidth = WIDTH, iconHeight = HEIGHT,
popupAnchorX = popup_anchor_x, popupAnchorY = anchor_diff,
iconAnchorX = WIDTH/2, iconAnchorY = HEIGHT
),
orange = makeIcon(
iconUrl = paste0("https://storage.googleapis.com/andersenlab.org/img/orange.svg"),
iconWidth = WIDTH, iconHeight = HEIGHT,
popupAnchorX = popup_anchor_x, popupAnchorY = anchor_diff,
iconAnchorX = WIDTH/2, iconAnchorY = HEIGHT
),
blue = makeIcon(
iconUrl = paste0("https://storage.googleapis.com/andersenlab.org/img/blue.svg"),
iconWidth = WIDTH, iconHeight = HEIGHT,
popupAnchorX = popup_anchor_x, popupAnchorY = anchor_diff,
iconAnchorX = WIDTH/2, iconAnchorY = HEIGHT
),
lblue = makeIcon(
iconUrl = paste0("https://storage.googleapis.com/andersenlab.org/img/lblue.svg"),
iconWidth = WIDTH, iconHeight = HEIGHT,
popupAnchorX = popup_anchor_x, popupAnchorY = anchor_diff,
iconAnchorX = WIDTH/2, iconAnchorY = HEIGHT
),
grey = makeIcon(
iconUrl = paste0("https://storage.googleapis.com/andersenlab.org/img/grey.svg"),
iconWidth = WIDTH, iconHeight = HEIGHT,
popupAnchorX = popup_anchor_x, popupAnchorY = anchor_diff,
iconAnchorX = WIDTH/2, iconAnchorY = HEIGHT
)
)
df <- dplyr::filter(df, !is.na(df[[color_use]])) %>%
dplyr::rowwise() %>%
dplyr::mutate(s_label = stringr::str_split(s_label, ",")) %>%
dplyr::mutate(s_label = paste0("<ul>",
paste0(purrr::map(s_label,
function(x) {
paste0("<li>", x, "</li>")
}
), collapse=""),
"</ul>",
collapse = "")) %>%
dplyr::ungroup() %>%
dplyr::mutate(substrate=ifelse(is.na(substrate), "", substrate))
#print(df)
attach(df)
leaflet::leaflet(data = df, width = "100%", options = list(zoomControl = F)) %>%
leaflet::addTiles(
paste0(
"https://stamen-tiles-{s}.a.ssl.fastly.net/terrain-background/{z}/{x}/{y}.png",
jsonlite::read_json("thunderforest.json")$key)
) %>%
leaflet::addMarkers(~collection_longitude,
~collection_latitude,
popup = glue::glue("<h2>{c_label}</h2><hr />
<strong>worms on sample:</strong> {worms_on_sample}<br />
<strong>approximate number of worms:</strong> {approximate_number_of_worms}<br />
<strong>substrate:</strong> {substrate}<br />
<strong>landscape</strong> {landscape}<br /><br />
"), #<a href='{photo_url}'><img style='width: 150px;' src='{photo_url_thumb}'></a>
popupOptions(maxWidth = 500),
icon = icos[ df[[color_use]] ] )
#htmlwidgets::saveWidget(m, tempfile(), selfcontained = FALSE)
#webshot::webshot("temp.html", file = "map.png",
#        cliprect = "viewport", vwidth = 1000, vheight = 1000)
}
library(cowplot)
library(DT)
try(setwd(dirname(rstudioapi::getActiveDocumentContext()$path)))
source("~/Dropbox/AndersenLab/LabFolders/Tim/2018HawaiiSampling/01-setup.R")
map_collection <- function(df, color_use) {
WIDTH <- 20
HEIGHT <- 20
anchor_diff = -20
popup_anchor_x = 0.001
icos <- iconList(
red = makeIcon(
iconUrl = paste0("https://storage.googleapis.com/andersenlab.org/img/red.svg"),
iconWidth = WIDTH, iconHeight = HEIGHT,
popupAnchorX = popup_anchor_x, popupAnchorY = anchor_diff,
iconAnchorX = WIDTH/2, iconAnchorY = HEIGHT
),
lred = makeIcon(
iconUrl = paste0("https://storage.googleapis.com/andersenlab.org/img/lred.svg"),
iconWidth = WIDTH, iconHeight = HEIGHT,
popupAnchorX = popup_anchor_x, popupAnchorY = anchor_diff,
iconAnchorX = WIDTH/2, iconAnchorY = HEIGHT
),
yellow = makeIcon(
iconUrl = paste0("https://storage.googleapis.com/andersenlab.org/img/yellow.svg"),
iconWidth = WIDTH, iconHeight = HEIGHT,
popupAnchorX = popup_anchor_x, popupAnchorY = anchor_diff,
iconAnchorX = WIDTH/2, iconAnchorY = HEIGHT
),
green = makeIcon(
iconUrl = paste0("https://storage.googleapis.com/andersenlab.org/img/green.svg"),
iconWidth = WIDTH, iconHeight = HEIGHT,
popupAnchorX = popup_anchor_x, popupAnchorY = anchor_diff,
iconAnchorX = WIDTH/2, iconAnchorY = HEIGHT
),
grey = makeIcon(
iconUrl = paste0("https://storage.googleapis.com/andersenlab.org/img/grey.svg"),
iconWidth = WIDTH, iconHeight = HEIGHT,
popupAnchorX = popup_anchor_x, popupAnchorY = anchor_diff,
iconAnchorX = WIDTH/2, iconAnchorY = HEIGHT
),
orange = makeIcon(
iconUrl = paste0("https://storage.googleapis.com/andersenlab.org/img/orange.svg"),
iconWidth = WIDTH, iconHeight = HEIGHT,
popupAnchorX = popup_anchor_x, popupAnchorY = anchor_diff,
iconAnchorX = WIDTH/2, iconAnchorY = HEIGHT
),
blue = makeIcon(
iconUrl = paste0("https://storage.googleapis.com/andersenlab.org/img/blue.svg"),
iconWidth = WIDTH, iconHeight = HEIGHT,
popupAnchorX = popup_anchor_x, popupAnchorY = anchor_diff,
iconAnchorX = WIDTH/2, iconAnchorY = HEIGHT
),
lblue = makeIcon(
iconUrl = paste0("https://storage.googleapis.com/andersenlab.org/img/lblue.svg"),
iconWidth = WIDTH, iconHeight = HEIGHT,
popupAnchorX = popup_anchor_x, popupAnchorY = anchor_diff,
iconAnchorX = WIDTH/2, iconAnchorY = HEIGHT
),
grey = makeIcon(
iconUrl = paste0("https://storage.googleapis.com/andersenlab.org/img/grey.svg"),
iconWidth = WIDTH, iconHeight = HEIGHT,
popupAnchorX = popup_anchor_x, popupAnchorY = anchor_diff,
iconAnchorX = WIDTH/2, iconAnchorY = HEIGHT
)
)
df <- dplyr::filter(df, !is.na(df[[color_use]])) %>%
dplyr::rowwise() %>%
dplyr::mutate(s_label = stringr::str_split(s_label, ",")) %>%
dplyr::mutate(s_label = paste0("<ul>",
paste0(purrr::map(s_label,
function(x) {
paste0("<li>", x, "</li>")
}
), collapse=""),
"</ul>",
collapse = "")) %>%
dplyr::ungroup() %>%
dplyr::mutate(substrate=ifelse(is.na(substrate), "", substrate))
#print(df)
attach(df)
leaflet::leaflet(data = df, width = "100%", height = 800, options = list(zoomControl = T)) %>%
leaflet::addTiles(
paste0(
"https://stamen-tiles-{s}.a.ssl.fastly.net/terrain-background/{z}/{x}/{y}.png",
jsonlite::read_json("thunderforest.json")$key)
) %>%
leaflet::addMarkers(~collection_longitude,
~collection_latitude,
popup = glue::glue("<h2>{c_label}</h2><hr />
<strong>worms on sample:</strong> {worms_on_sample}<br />
<strong>approximate number of worms:</strong> {approximate_number_of_worms}<br />
<strong>substrate:</strong> {substrate}<br />
<strong>landscape</strong> {landscape}<br /><br />
<a href='https://drive.google.com/file/d/{id}'><img style='width: 125px;' src='https://drive.google.com/uc?export=download&id={id}'></a>"),
popupOptions(maxWidth = 500),
icon = icos[ df[[color_use]] ] )
#htmlwidgets::saveWidget(m, tempfile(), selfcontained = FALSE)
#webshot::webshot("temp.html", file = "map.png",
#        cliprect = "viewport", vwidth = 1000, vheight = 1000)
}
library(googledrive)
map_collection <- function(df, color_use) {
WIDTH <- 20
HEIGHT <- 20
anchor_diff = -20
popup_anchor_x = 0.001
icos <- iconList(
red = makeIcon(
iconUrl = paste0("https://storage.googleapis.com/andersenlab.org/img/red.svg"),
iconWidth = WIDTH, iconHeight = HEIGHT,
popupAnchorX = popup_anchor_x, popupAnchorY = anchor_diff,
iconAnchorX = WIDTH/2, iconAnchorY = HEIGHT
),
lred = makeIcon(
iconUrl = paste0("https://storage.googleapis.com/andersenlab.org/img/lred.svg"),
iconWidth = WIDTH, iconHeight = HEIGHT,
popupAnchorX = popup_anchor_x, popupAnchorY = anchor_diff,
iconAnchorX = WIDTH/2, iconAnchorY = HEIGHT
),
yellow = makeIcon(
iconUrl = paste0("https://storage.googleapis.com/andersenlab.org/img/yellow.svg"),
iconWidth = WIDTH, iconHeight = HEIGHT,
popupAnchorX = popup_anchor_x, popupAnchorY = anchor_diff,
iconAnchorX = WIDTH/2, iconAnchorY = HEIGHT
),
green = makeIcon(
iconUrl = paste0("https://storage.googleapis.com/andersenlab.org/img/green.svg"),
iconWidth = WIDTH, iconHeight = HEIGHT,
popupAnchorX = popup_anchor_x, popupAnchorY = anchor_diff,
iconAnchorX = WIDTH/2, iconAnchorY = HEIGHT
),
grey = makeIcon(
iconUrl = paste0("https://storage.googleapis.com/andersenlab.org/img/grey.svg"),
iconWidth = WIDTH, iconHeight = HEIGHT,
popupAnchorX = popup_anchor_x, popupAnchorY = anchor_diff,
iconAnchorX = WIDTH/2, iconAnchorY = HEIGHT
),
orange = makeIcon(
iconUrl = paste0("https://storage.googleapis.com/andersenlab.org/img/orange.svg"),
iconWidth = WIDTH, iconHeight = HEIGHT,
popupAnchorX = popup_anchor_x, popupAnchorY = anchor_diff,
iconAnchorX = WIDTH/2, iconAnchorY = HEIGHT
),
blue = makeIcon(
iconUrl = paste0("https://storage.googleapis.com/andersenlab.org/img/blue.svg"),
iconWidth = WIDTH, iconHeight = HEIGHT,
popupAnchorX = popup_anchor_x, popupAnchorY = anchor_diff,
iconAnchorX = WIDTH/2, iconAnchorY = HEIGHT
),
lblue = makeIcon(
iconUrl = paste0("https://storage.googleapis.com/andersenlab.org/img/lblue.svg"),
iconWidth = WIDTH, iconHeight = HEIGHT,
popupAnchorX = popup_anchor_x, popupAnchorY = anchor_diff,
iconAnchorX = WIDTH/2, iconAnchorY = HEIGHT
),
grey = makeIcon(
iconUrl = paste0("https://storage.googleapis.com/andersenlab.org/img/grey.svg"),
iconWidth = WIDTH, iconHeight = HEIGHT,
popupAnchorX = popup_anchor_x, popupAnchorY = anchor_diff,
iconAnchorX = WIDTH/2, iconAnchorY = HEIGHT
)
)
df <- dplyr::filter(df, !is.na(df[[color_use]])) %>%
dplyr::rowwise() %>%
dplyr::mutate(s_label = stringr::str_split(s_label, ",")) %>%
dplyr::mutate(s_label = paste0("<ul>",
paste0(purrr::map(s_label,
function(x) {
paste0("<li>", x, "</li>")
}
), collapse=""),
"</ul>",
collapse = "")) %>%
dplyr::ungroup() %>%
dplyr::mutate(substrate=ifelse(is.na(substrate), "", substrate))
#print(df)
attach(df)
leaflet::leaflet(data = df, width = "100%", height = 800, options = list(zoomControl = T)) %>%
leaflet::addTiles(
paste0(
"https://stamen-tiles-{s}.a.ssl.fastly.net/terrain-background/{z}/{x}/{y}.png",
jsonlite::read_json("thunderforest.json")$key)
) %>%
leaflet::addMarkers(~collection_longitude,
~collection_latitude,
popup = glue::glue("<h2>{c_label}</h2><hr />
<strong>worms on sample:</strong> {worms_on_sample}<br />
<strong>approximate number of worms:</strong> {approximate_number_of_worms}<br />
<strong>substrate:</strong> {substrate}<br />
<strong>landscape</strong> {landscape}<br /><br />
<a href='https://drive.google.com/file/d/{id}'><img style='width: 125px;' src='https://drive.google.com/uc?export=download&id={id}'></a>"),
popupOptions(maxWidth = 500),
icon = icos[ df[[color_use]] ] )
#htmlwidgets::saveWidget(m, tempfile(), selfcontained = FALSE)
#webshot::webshot("temp.html", file = "map.png",
#        cliprect = "viewport", vwidth = 1000, vheight = 1000)
}
hi_photo_ids <- googledrive::drive_ls("~/HI_photos/") %>%
dplyr::mutate(sample_photo = str_remove(name, ".jpg")) %>%
dplyr::select(sample_photo, id)
dup_celegans_map <- map_collection(df %>% dplyr::filter(confirmed_species_id == "C. elegans") %>%  dplyr::mutate(color = case_when(duplicated_c_label == "1" ~ "grey", duplicated_c_label == "0" ~ "red")) , "color")
dup_celegans_map
View(total_celegans)
View(dup_c_elegans_c_plates)
c3491 <- df %>%
dplyr::filter(c_label == "C-3491") %>%
dplyr::select(fulcrum_id_collection, fulcrum_id_isolation, c_label, s_label, confirmed_species_id,
collection_datetime, isolated_at) %>%
dplyr::arrange(collection_datetime)
DT::datatable(c3491)
View(c3491)
c3569 <- df %>%
dplyr::filter(c_label == "C-3569") %>%
dplyr::select(fulcrum_id_collection, fulcrum_id_isolation, c_label, s_label, confirmed_species_id,
collection_datetime, isolated_at) %>%
dplyr::arrange(collection_datetime)
DT::datatable(c3569)
View(c3569)
c3603 <- df %>%
dplyr::filter(c_label == "C-3603") %>%
dplyr::select(fulcrum_id_collection, fulcrum_id_isolation, c_label, s_label, confirmed_species_id,
collection_datetime, isolated_at) %>%
dplyr::arrange(collection_datetime)
DT::datatable(c3603)
View(c3603)
c3611 <- df %>%
dplyr::filter(c_label == "C-3611") %>%
dplyr::select(fulcrum_id_collection, fulcrum_id_isolation, c_label, s_label, confirmed_species_id,
collection_datetime, isolated_at) %>%
dplyr::arrange(collection_datetime)
DT::datatable(c3611)
View(c3611)
View(c3611)
View(dup_c_elegans_c_plates)
length(unique(dup_c_elegans_c_plates))
length(unique(dup_c_elegans_c_plates$c_label))
View(df)
```{r, setup, include=FALSE}
library(tidyverse)
library(cowplot)
library(DT)
try(setwd(dirname(rstudioapi::getActiveDocumentContext()$path)))
source("~/Dropbox/AndersenLab/LabFolders/Tim/2018HawaiiSampling/01-setup.R")
try(setwd(glue::glue("{dirname(rstudioapi::getActiveDocumentContext()$path)}/..")))
source("~/Dropbox/AndersenLab/LabFolders/Tim/2018HawaiiSampling/01-setup.R")
source("01-setup.R")
